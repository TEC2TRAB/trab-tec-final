/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import Dao.FuncionarioDao;
import javax.swing.JOptionPane;
import Classes.*;
import ModuloDePessoas.Funcionario;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author cesar.nascimento
 */
public class Cons_Func extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cons_Func_Teste
     */
    public Cons_Func() {
        initComponents();
        ButtonColumn bc = new ButtonColumn(jTableFunc,2);
        setClosable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCancelar = new javax.swing.JButton();
        jLabelNome = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        jRadioButtonCPF = new javax.swing.JRadioButton();
        jRadioButtonNome = new javax.swing.JRadioButton();
        jLabelCPF = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFunc = new javax.swing.JTable();
        jLabel1Selecione = new javax.swing.JLabel();
        jTextCPF = new javax.swing.JTextField();
        jButtonConsultar = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonCancelarMousePressed(evt);
            }
        });

        jLabelNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelNome.setText("Nome:");

        jTextNome.setName(""); // NOI18N

        jRadioButtonCPF.setText("CPF");
        jRadioButtonCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCPFActionPerformed(evt);
            }
        });

        jRadioButtonNome.setText("Nome");
        jRadioButtonNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNomeActionPerformed(evt);
            }
        });

        jLabelCPF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelCPF.setText("CPF:");

        jTableFunc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Editar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFunc.setRowHeight(24);
        jScrollPane1.setViewportView(jTableFunc);

        jLabel1Selecione.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1Selecione.setText("Selecione: ");

        jTextCPF.setName(""); // NOI18N

        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonConsultarMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelCPF)
                                .addComponent(jLabel1Selecione))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButtonCPF)
                                    .addGap(18, 18, 18)
                                    .addComponent(jRadioButtonNome))
                                .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonConsultar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelNome)
                                .addGap(18, 18, 18)
                                .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1Selecione)
                    .addComponent(jRadioButtonCPF)
                    .addComponent(jRadioButtonNome))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCPF)
                    .addComponent(jTextCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConsultar)
                    .addComponent(jButtonCancelar))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelarMousePressed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarMousePressed

    private void jRadioButtonCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonCPFActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableFunc.getModel();
        model.setNumRows(0);
        if(jRadioButtonCPF.isSelected()==true){
            jTextCPF.setText("");
            jTextNome.setText("");
            jRadioButtonNome.setSelected(false);
            jTextCPF.setEnabled(true);
            jTextNome.setEnabled(false);
        }else{
            jTextNome.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButtonCPFActionPerformed

    private void jRadioButtonNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNomeActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableFunc.getModel();
        model.setNumRows(0);
        if(jRadioButtonNome.isSelected()==true){
            jTextCPF.setText("");
            jTextNome.setText("");
            jRadioButtonCPF.setSelected(false);
            jTextNome.setEnabled(true);
            jTextCPF.setEnabled(false);
        }else{
            jTextCPF.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioButtonNomeActionPerformed

    private void jButtonConsultarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConsultarMousePressed
        FuncionarioDao f = new FuncionarioDao();
        List<Funcionario> funcionarios = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) jTableFunc.getModel();
        model.setNumRows(0);
        int passa = 0;
        if(jRadioButtonCPF.isSelected()==false && jRadioButtonNome.isSelected()==false){
            JOptionPane.showMessageDialog(null,"Você precisa selecionar uma forma de pesquisa antes de clicar em \"Consultar\", por CPF ou por Nome.", "Alerta", JOptionPane.WARNING_MESSAGE);
            passa = 1;
        }
        if(jRadioButtonCPF.isSelected()==true && jTextCPF.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Campo CPF em branco, por favor, preencha e pesquise novamente.", "Alerta", JOptionPane.WARNING_MESSAGE);
            jTextCPF.requestFocus();
            passa = 1;
        }else if(jRadioButtonCPF.isSelected()==true){
            if(ValidadorCPF.TestaCPF(jTextCPF.getText())==true){
                funcionarios = f.consultar(Long.parseLong(jTextCPF.getText()));
                passa = 0;
            }else{
                JOptionPane.showMessageDialog(null,"CPF inválido, por favor, digite um CPF válido e pesquise novamente.", "Alerta", JOptionPane.WARNING_MESSAGE);
                jTextCPF.setText("");
                jTextCPF.requestFocus();
                passa = 1;
            }
        }

        if(jRadioButtonNome.isSelected()==true && jTextNome.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Campo Nome em branco, por favor, preencha e pesquise novamente.", "Alerta", JOptionPane.WARNING_MESSAGE);
            passa = 1;
        }else if(jRadioButtonNome.isSelected()==true){
            funcionarios = f.consultar(jTextNome.getText());
        }
        if(passa == 0 && funcionarios.isEmpty()){
            JOptionPane.showMessageDialog(null, "A pesquisa não retornou dados, tente novamente.", "Alerta", JOptionPane.WARNING_MESSAGE);
        }else{
            Object vec[] = new Object[2];
            String cpf;
            for(Funcionario fi : funcionarios){
                cpf = Long.toString(fi.getCPF());
                if(cpf.length()!=11){
                    while(cpf.length()!=11){
                        cpf = "0"+cpf;
                    }
                }
                vec[0] = fi.getNome();
                vec[1] = cpf;
                model.addRow(vec);
            }
        }
    }//GEN-LAST:event_jButtonConsultarMousePressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        jRadioButtonCPF.setSelected(true);
        jTextNome.setEnabled(false);
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JLabel jLabel1Selecione;
    private javax.swing.JLabel jLabelCPF;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JRadioButton jRadioButtonCPF;
    private javax.swing.JRadioButton jRadioButtonNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFunc;
    private javax.swing.JTextField jTextCPF;
    private javax.swing.JTextField jTextNome;
    // End of variables declaration//GEN-END:variables
}
